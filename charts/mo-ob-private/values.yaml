mo-ob-opensource:
  enabled: true

  promtail:
    # image: 
    #   registry:   "registry.cn-hangzhou.aliyuncs.com/ack-cos"
    #   repository: "promtail"
    #   tag:        "2.8.4"
    enabled: true
    resources:
      limits:
        cpu: "200m"
        memory: "200Mi"
      requests:
        cpu: "10m"
        memory: "20Mi"
  loki:
    # sidecar: 
    #   image: 
    #     repository: "registry.cn-hangzhou.aliyuncs.com/ack-cos/k8s-sidecar"
    # image: 
    #   registry:   "registry.cn-hangzhou.aliyuncs.com/ack-cos"
    #   repository: "loki"
    enabled: true
    tableManager:
      enabled: true
      # retention related issue: https://github.com/matrixone-cloud/observability/issues/86
      retention_deletes_enabled: true
      retention_period: 720h
    # loki monolithic mode
    # singleBinary:
    #   replicas: 2
    loki:
      # disable log alert in paivate env
      rulerConfig: 
        storage: 
          type: ""  
      commonConfig:
        replication_factor: 1
      storage:
        bucketNames:
          chunks: ""
        type: s3
        s3:
          # s3: null
          endpoint: 
          # region: us-west-2
          secretAccessKey:
          accessKeyId:
          s3ForcePathStyle: false
          insecure: false
      schemaConfig:
        configs:
          - from: "2024-01-01"
            index:
              period: 24h
              prefix: index_
            object_store: s3
            schema: v12
            store: tsdb
    write:
      # -- Number of replicas for the write
      replicas: 1
      persistence:
        enableStatefulSetAutoDeletePVC: false
        size: 10Gi
        storageClass: 
      resources:
        requests:
          memory: "1Gi"
          cpu: "250m"
        limits:
          memory: "1Gi"
          cpu: "1000m"

    read:
      replicas: 1
      persistence:
        enableStatefulSetAutoDeletePVC: true
        size: 10Gi
        storageClass: 
      resources:
        requests:
          memory: "3Gi"
          cpu: "250m"
        limits:
          memory: "3Gi"
          cpu: "1000m"

    backend:
      replicas: 1
      persistence:
        enableStatefulSetAutoDeletePVC: true
        size: 10Gi
        storageClass: 
      resources:
        requests:
          memory: "250Mi"
          cpu: "200m"
        limits:
          memory: "250Mi"
          cpu: "200m"

    # Configuration for the gateway
    gateway:
      enabled: true
      replicas: 1
      resources:
        requests:
          memory: "250Mi"
          cpu: "250m"
        limits:
          memory: "1Gi"
          cpu: "1000m"

  kube-prometheus-stack:
    enabled: true
    
    prometheus-node-exporter: 
      # image: 
      #   registry:   "registry.cn-hangzhou.aliyuncs.com/ack-cos"
      #   repository: "node-exporter"
      enabled: true
      resources: 
        limits: 
          cpu:    "200m"
          memory: "100Mi"
        requests: 
          cpu:    "10m"
          memory: "20Mi"
    
    prometheusOperator:
      # image: 
      #   registry:   "registry.cn-hangzhou.aliyuncs.com/ack-cos"
      #   repository: "prometheus-operator"
      # prometheusConfigReloader: 
      #   image: 
      #     registry:   "registry.cn-hangzhou.aliyuncs.com/ack-cos"
      #     repository: "prometheus-config-reloader"
      admissionWebhooks: 
        enabled: false
        patch: 
          enabled: false
      resources:
        limits:
          cpu: "200m"
          memory: "400Mi"
        requests:
          cpu: "100m"
          memory: "400Mi"
    
    prometheus:
      prometheusSpec:
        # image: 
        #   registry:   "registry.cn-hangzhou.aliyuncs.com/ack-cos"
        #   repository: "prometheus"
        retention: 21d
        externalLabels:
          clusterDetail: mo-ob-private-cluster
        resources:
          limits:
            cpu: 1000m
            memory: "2Gi"
          requests:
            cpu: 1000m
            memory: "2Gi"
        # [必要]根据部署的云厂商选择存储配置
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ""
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 40Gi
        additionalScrapeConfigs: 
          - job_name: minio-cluster
            # metrics_path: /minio/v2/metrics/cluster
            scheme: http
            # static_configs:
            # - targets: [minio.mo-ob.svc.cluster.local]
            metrics_path: /minio/v2/metrics/cluster
            honor_labels: true
            kubernetes_sd_configs:
              - role: endpoints
            relabel_configs:
              - source_labels: [__meta_kubernetes_service_labelpresent_v1_min_io_tenant]
                action: keep
                regex: "true"
              - source_labels: [__meta_kubernetes_service_name]
                action: keep
                regex: "minio"
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
                action: replace
                target_label: __address__
                regex: (.+?)(?::\d+)?;(\d+)
                replacement: $1:$2
              - action: labelmap
                regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
                replacement: __param_$1
              - action: labelmap
                regex: __meta_kubernetes_pod_label_(.+)
              - action: labelmap
                regex: __meta_kubernetes_service_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: namespace
              - source_labels: [__meta_kubernetes_service_name]
                action: replace
                target_label: service
              - source_labels: [__meta_kubernetes_pod_node_name]
                action: replace
                target_label: node
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: pod
          
          - job_name: minio-bucket
            metrics_path: /minio/v2/metrics/bucket
            scheme: http
            honor_labels: true
            kubernetes_sd_configs:
              - role: endpoints
            relabel_configs:
              - source_labels: [__meta_kubernetes_service_labelpresent_v1_min_io_tenant]
                action: keep
                regex: "true"
              - source_labels: [__meta_kubernetes_service_name]
                action: keep
                regex: "minio"
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
                action: replace
                target_label: __address__
                regex: (.+?)(?::\d+)?;(\d+)
                replacement: $1:$2
              - action: labelmap
                regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
                replacement: __param_$1
              - action: labelmap
                regex: __meta_kubernetes_pod_label_(.+)
              - action: labelmap
                regex: __meta_kubernetes_service_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: namespace
              - source_labels: [__meta_kubernetes_service_name]
                action: replace
                target_label: service
              - source_labels: [__meta_kubernetes_pod_node_name]
                action: replace
                target_label: node
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: pod

          - job_name: matrixone-cluster
            metrics_path: /metrics
            scheme: http
            honor_labels: true
            kubernetes_sd_configs:
              - role: endpoints
            relabel_configs:
              - source_labels: [__meta_kubernetes_pod_labelpresent_matrixorigin_io_namespace]
                action: keep
                regex: "true"
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
                action: replace
                target_label: __address__
                regex: (.+?)(?::\d+)?;(\d+)
                replacement: $1:$2
              - action: labelmap
                regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
                replacement: __param_$1
              - action: labelmap
                regex: __meta_kubernetes_pod_label_(.+)
              - action: labelmap
                regex: __meta_kubernetes_service_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: namespace
              - source_labels: [__meta_kubernetes_service_name]
                action: replace
                target_label: service
              - source_labels: [__meta_kubernetes_pod_node_name]
                action: replace
                target_label: node
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: pod

          - job_name: 'kubernetes-service-endpoints'
            honor_labels: true
            kubernetes_sd_configs:
              - role: endpoints
            relabel_configs:
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
                action: keep
                regex: true
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape_slow]
                action: drop
                regex: true
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
                action: replace
                target_label: __scheme__
                regex: (https?)
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
                action: replace
                target_label: __address__
                regex: (.+?)(?::\d+)?;(\d+)
                replacement: $1:$2
              - action: labelmap
                regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
                replacement: __param_$1
              - action: labelmap
                regex: __meta_kubernetes_pod_label_(.+)
              - action: labelmap
                regex: __meta_kubernetes_service_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: namespace
              - source_labels: [__meta_kubernetes_service_name]
                action: replace
                target_label: service
              - source_labels: [__meta_kubernetes_pod_node_name]
                action: replace
                target_label: node
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: pod

          - job_name: 'kubernetes-service-endpoints-slow'
            honor_labels: true

            scrape_interval: 5m
            scrape_timeout: 30s

            kubernetes_sd_configs:
              - role: endpoints

            relabel_configs:
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape_slow]
                action: keep
                regex: true
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
                action: replace
                target_label: __scheme__
                regex: (https?)
              - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
                action: replace
                target_label: __address__
                regex: (.+?)(?::\d+)?;(\d+)
                replacement: $1:$2
              - action: labelmap
                regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
                replacement: __param_$1
              - action: labelmap
                regex: __meta_kubernetes_pod_label_(.+)
              - action: labelmap
                regex: __meta_kubernetes_service_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: namespace
              - source_labels: [__meta_kubernetes_service_name]
                action: replace
                target_label: service
              - source_labels: [__meta_kubernetes_pod_node_name]
                action: replace
                target_label: node
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: pod

          - job_name: "moob-application"
            honor_labels: true
            kubernetes_sd_configs:
              - role: endpoints
            relabel_configs:
              - action: keep
                regex: "mo-ob"
                source_labels:
                - __meta_kubernetes_namespace
              - source_labels:
                - __meta_kubernetes_endpoints_label_need_metrics
                action: keep
                regex: true
              - action: labelmap
                regex: __meta_kubernetes_pod_label_(.+)
              - action: labelmap
                regex: __meta_kubernetes_endpoints_label_(.+)
              - action: replace
                source_labels:
                - __meta_kubernetes_namespace
                target_label: namespace
              - action: replace
                source_labels:
                - __meta_kubernetes_service_name
                target_label: service
              - action: replace
                source_labels:
                - __meta_kubernetes_pod_node_name
                target_label: node
              - action: replace
                source_labels: [__meta_kubernetes_pod_name]
                target_label: pod
    
    kube-state-metrics:
      enabled: true
      # image: 
      #   registry:   "registry.cn-hangzhou.aliyuncs.com/ack-cos"
      #   repository: "kube-state-metrics"
      prometheus:
        monitor:
          enabled: ture

mo-ruler-stack:
  enabled: true
  moRuler:
    enabled: false

  # webhook adapter for alertmanger to send alert to wecom
  alertmanagerWebhookAdapter:
    enabled: false
    image:
      repository: ez4bruce3280/alertmanager-webhook-adapter
      tag: v1.1.7

  alertmanager:
    enabled: false

  grafana:
    # image: 
    #   repository: "registry.cn-hangzhou.aliyuncs.com/ack-cos/grafana"
    # initChownData: 
    #   image: 
    #     "repository": "registry.cn-hangzhou.aliyuncs.com/ack-cos/busybox"
    # sidecar: 
    #   image: 
    #     repository: "registry.cn-hangzhou.aliyuncs.com/ack-cos/k8s-sidecar"
      
    replicas: 1
    enabled: true
    resources: 
      limits: 
        cpu:    "500m"
        memory: "1Gi"
      requests: 
        cpu:    "200m"
        memory: "1Gi"
    
    persistence: 
      enabled:          true
      type:             "statefulset"
      storageClassName: ""
      size:             "5Gi"
    
    # static passwd
    adminUser: admin
    adminPassword: admin
    admin:
      existingSecret: ""
    
      grafana.ini:
      auth.generic_oauth:
        enabled: false
    
    service:
      enabled: true
      type: ClusterIP
      port: 80
      targetPort: 3000
      labels: {}
      portName: service
      # Adds the appProtocol field to the service. This allows to work with istio protocol selection. Ex: "http" or "tcp"
      appProtocol: ""
